init:
  header: |
    ---
    layout: default
    title: {{title}}
    parent: {{pre}}
    grand_parent: {{grand}}
    ---

todo:
- Generate index
- Generate reference

jobs:
# --------------------
- name: Generate index
  exec: |
    ow.loadObj();

    global.opacks = Object.keys(getOPackPaths()).map(r => r.toLowerCase())
    global.all    = searchHelp("").filter(r => global.opacks.indexOf(r.id.toLowerCase()) < 0 && 
                                               global.opacks.indexOf("plugin-" + r.id.toLowerCase()) < 0 &&
                                               r.id != "ops");
    global.idxs   = Object.keys( ow.obj.fromArray2Obj(global.all, "id") ).sort();

    io.rm("out");
    io.mkdir("out");

# ------------------------
- name: Generate reference
  each: Generate entry
  exec: |
    var rout = "---\nlayout: default\ntitle: Reference\nparent: OpenAF docs\nhas_children: true\nnav_order: 4\n---\n";
    rout += "# Reference\n_version: " + getVersion() + "_\n";

    log("Number of indexes: " + global.idxs.length);
    global.idxs.map(idx => {
      var out = templify(args.init.header, {
        title: idx,
        pre  : "Reference",
        grand: "OpenAF docs"
      });
      out += "\n\n## " + idx + "\n\n";
      var f = idx.replace(".", "_") + ".md";
      log("Generating " + f + "...");

      $from(global.all)
      .equals("id", idx)
      .notEquals("id", "index")
      .select(r => {
        out += "### " + r.key + "\n\n";
        var h = searchHelp(r.key, void 0, [ idx ])[0];
        out += "__" + h.fullkey + "__\n\n";
        //out += "<pre>" + h.text.replace(/\n\n+/g, "</pre>") + "</pre>";
        out += "````\n" + h.text + "\n````\n";
      });
    
      if (f != "index.md") io.writeFileString("out/" + f, out);
      rout += "* __[" + idx + "](" + f + ")__\n";
      log("... done " + f);
    });

    io.writeFileString("out/index.md", rout);